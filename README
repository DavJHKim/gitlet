# Gitlet: A Git-Inspired Version Control System

This project is a functional reimplementation of core Git version control features, built entirely in Java. 
Developed as part of UC Berkeley's CS61B: Data Structures and Programming Methodology course, **Gitlet** replicates key Git operations such as `init`, `add`, `commit`, `checkout`, and `merge`.

---

## ðŸš€ Features

Gitlet supports the following commands:

- `init`: Initialize a new Gitlet version-control system
- `add [file]`: Stage a file for the next commit
- `commit [message]`: Save a snapshot of staged files
- `checkout`: Restore files or switch branches
- `log`, `global-log`: Display commit history
- `rm [file]`: Remove a file from the staging area
- `find [message]`: Search for commits by message
- `status`: Show current branch and staged files
- `branch`, `rm-branch`: Create or remove branches
- `reset [commit-id]`: Reset working directory to a specific commit
- `merge [branch]`: Merge a branch into the current one

---

## ðŸ§ª Example Usage

```bash
# Compile the project
javac *.java

# Initialize the repository
java gitlet.Main init

# Add and commit files
java gitlet.Main add file.txt
java gitlet.Main commit "Initial commit"

# View status
java gitlet.Main status
